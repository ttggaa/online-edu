package com.education.framework.util;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

public class Base64 {
	private static final byte[] encodingTable = { (byte) 'A', (byte) 'B',
			(byte) 'C', (byte) 'D', (byte) 'E', (byte) 'F', (byte) 'G',
			(byte) 'H', (byte) 'I', (byte) 'J', (byte) 'K', (byte) 'L',
			(byte) 'M', (byte) 'N', (byte) 'O', (byte) 'P', (byte) 'Q',
			(byte) 'R', (byte) 'S', (byte) 'T', (byte) 'U', (byte) 'V',
			(byte) 'W', (byte) 'X', (byte) 'Y', (byte) 'Z', (byte) 'a',
			(byte) 'b', (byte) 'c', (byte) 'd', (byte) 'e', (byte) 'f',
			(byte) 'g', (byte) 'h', (byte) 'i', (byte) 'j', (byte) 'k',
			(byte) 'l', (byte) 'm', (byte) 'n', (byte) 'o', (byte) 'p',
			(byte) 'q', (byte) 'r', (byte) 's', (byte) 't', (byte) 'u',
			(byte) 'v', (byte) 'w', (byte) 'x', (byte) 'y', (byte) 'z',
			(byte) '0', (byte) '1', (byte) '2', (byte) '3', (byte) '4',
			(byte) '5', (byte) '6', (byte) '7', (byte) '8', (byte) '9',
			(byte) '+', (byte) '/' };
	private static final byte[] decodingTable;
	static {
		decodingTable = new byte[128];

		for (int i = 0; i < 128; i++) {
			decodingTable[i] = (byte) -1;
		}

		for (int i = 'A'; i <= 'Z'; i++) {
			decodingTable[i] = (byte) (i - 'A');
		}

		for (int i = 'a'; i <= 'z'; i++) {
			decodingTable[i] = (byte) (i - 'a' + 26);
		}

		for (int i = '0'; i <= '9'; i++) {
			decodingTable[i] = (byte) (i - '0' + 52);
		}

		decodingTable['+'] = 62;
		decodingTable['/'] = 63;
	}
	public static String encodeStr(String data) {
		if(null == data) return "";
		try {
			return new String(Base64.encode(data.getBytes("utf-8")),"utf-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
		return "";
	}
	public static byte[] encode(byte[] data) {
		byte[] bytes;

		int modulus = data.length % 3;

		if (modulus == 0) {
			bytes = new byte[(4 * data.length) / 3];
		} else {
			bytes = new byte[4 * ((data.length / 3) + 1)];
		}

		int dataLength = (data.length - modulus);
		int a1;
		int a2;
		int a3;

		for (int i = 0, j = 0; i < dataLength; i += 3, j += 4) {
			a1 = data[i] & 0xff;
			a2 = data[i + 1] & 0xff;
			a3 = data[i + 2] & 0xff;

			bytes[j] = encodingTable[(a1 >>> 2) & 0x3f];
			bytes[j + 1] = encodingTable[((a1 << 4) | (a2 >>> 4)) & 0x3f];
			bytes[j + 2] = encodingTable[((a2 << 2) | (a3 >>> 6)) & 0x3f];
			bytes[j + 3] = encodingTable[a3 & 0x3f];
		}

		int b1;
		int b2;
		int b3;
		int d1;
		int d2;

		switch (modulus) {
		case 0: /* nothing left to do */
			break;

		case 1:
			d1 = data[data.length - 1] & 0xff;
			b1 = (d1 >>> 2) & 0x3f;
			b2 = (d1 << 4) & 0x3f;

			bytes[bytes.length - 4] = encodingTable[b1];
			bytes[bytes.length - 3] = encodingTable[b2];
			bytes[bytes.length - 2] = (byte) '=';
			bytes[bytes.length - 1] = (byte) '=';

			break;

		case 2:
			d1 = data[data.length - 2] & 0xff;
			d2 = data[data.length - 1] & 0xff;

			b1 = (d1 >>> 2) & 0x3f;
			b2 = ((d1 << 4) | (d2 >>> 4)) & 0x3f;
			b3 = (d2 << 2) & 0x3f;

			bytes[bytes.length - 4] = encodingTable[b1];
			bytes[bytes.length - 3] = encodingTable[b2];
			bytes[bytes.length - 2] = encodingTable[b3];
			bytes[bytes.length - 1] = (byte) '=';

			break;
		}

		return bytes;
	}

	public static byte[] decode(byte[] data) {
		byte[] bytes;
		byte b1;
		byte b2;
		byte b3;
		byte b4;

		data = discardNonBase64Bytes(data);

		if (data[data.length - 2] == '=') {
			bytes = new byte[(((data.length / 4) - 1) * 3) + 1];
		} else if (data[data.length - 1] == '=') {
			bytes = new byte[(((data.length / 4) - 1) * 3) + 2];
		} else {
			bytes = new byte[((data.length / 4) * 3)];
		}

		for (int i = 0, j = 0; i < (data.length - 4); i += 4, j += 3) {
			b1 = decodingTable[data[i]];
			b2 = decodingTable[data[i + 1]];
			b3 = decodingTable[data[i + 2]];
			b4 = decodingTable[data[i + 3]];

			bytes[j] = (byte) ((b1 << 2) | (b2 >> 4));
			bytes[j + 1] = (byte) ((b2 << 4) | (b3 >> 2));
			bytes[j + 2] = (byte) ((b3 << 6) | b4);
		}

		if (data[data.length - 2] == '=') {
			b1 = decodingTable[data[data.length - 4]];
			b2 = decodingTable[data[data.length - 3]];

			bytes[bytes.length - 1] = (byte) ((b1 << 2) | (b2 >> 4));
		} else if (data[data.length - 1] == '=') {
			b1 = decodingTable[data[data.length - 4]];
			b2 = decodingTable[data[data.length - 3]];
			b3 = decodingTable[data[data.length - 2]];

			bytes[bytes.length - 2] = (byte) ((b1 << 2) | (b2 >> 4));
			bytes[bytes.length - 1] = (byte) ((b2 << 4) | (b3 >> 2));
		} else {
			b1 = decodingTable[data[data.length - 4]];
			b2 = decodingTable[data[data.length - 3]];
			b3 = decodingTable[data[data.length - 2]];
			b4 = decodingTable[data[data.length - 1]];

			bytes[bytes.length - 3] = (byte) ((b1 << 2) | (b2 >> 4));
			bytes[bytes.length - 2] = (byte) ((b2 << 4) | (b3 >> 2));
			bytes[bytes.length - 1] = (byte) ((b3 << 6) | b4);
		}

		return bytes;
	}

	public static byte[] decode(String data) {
		byte[] bytes;
		byte b1;
		byte b2;
		byte b3;
		byte b4;

		data = discardNonBase64Chars(data);

		if (data.charAt(data.length() - 2) == '=') {
			bytes = new byte[(((data.length() / 4) - 1) * 3) + 1];
		} else if (data.charAt(data.length() - 1) == '=') {
			bytes = new byte[(((data.length() / 4) - 1) * 3) + 2];
		} else {
			bytes = new byte[((data.length() / 4) * 3)];
		}

		for (int i = 0, j = 0; i < (data.length() - 4); i += 4, j += 3) {
			b1 = decodingTable[data.charAt(i)];
			b2 = decodingTable[data.charAt(i + 1)];
			b3 = decodingTable[data.charAt(i + 2)];
			b4 = decodingTable[data.charAt(i + 3)];

			bytes[j] = (byte) ((b1 << 2) | (b2 >> 4));
			bytes[j + 1] = (byte) ((b2 << 4) | (b3 >> 2));
			bytes[j + 2] = (byte) ((b3 << 6) | b4);
		}

		if (data.charAt(data.length() - 2) == '=') {
			b1 = decodingTable[data.charAt(data.length() - 4)];
			b2 = decodingTable[data.charAt(data.length() - 3)];

			bytes[bytes.length - 1] = (byte) ((b1 << 2) | (b2 >> 4));
		} else if (data.charAt(data.length() - 1) == '=') {
			b1 = decodingTable[data.charAt(data.length() - 4)];
			b2 = decodingTable[data.charAt(data.length() - 3)];
			b3 = decodingTable[data.charAt(data.length() - 2)];

			bytes[bytes.length - 2] = (byte) ((b1 << 2) | (b2 >> 4));
			bytes[bytes.length - 1] = (byte) ((b2 << 4) | (b3 >> 2));
		} else {
			b1 = decodingTable[data.charAt(data.length() - 4)];
			b2 = decodingTable[data.charAt(data.length() - 3)];
			b3 = decodingTable[data.charAt(data.length() - 2)];
			b4 = decodingTable[data.charAt(data.length() - 1)];

			bytes[bytes.length - 3] = (byte) ((b1 << 2) | (b2 >> 4));
			bytes[bytes.length - 2] = (byte) ((b2 << 4) | (b3 >> 2));
			bytes[bytes.length - 1] = (byte) ((b3 << 6) | b4);
		}

		return bytes;
	}

	private static byte[] discardNonBase64Bytes(byte[] data) {
		byte[] temp = new byte[data.length];
		int bytesCopied = 0;

		for (int i = 0; i < data.length; i++) {
			if (isValidBase64Byte(data[i])) {
				temp[bytesCopied++] = data[i];
			}
		}

		byte[] newData = new byte[bytesCopied];

		System.arraycopy(temp, 0, newData, 0, bytesCopied);

		return newData;
	}

	private static String discardNonBase64Chars(String data) {
		StringBuffer sb = new StringBuffer();

		int length = data.length();

		for (int i = 0; i < length; i++) {
			if (isValidBase64Byte((byte) (data.charAt(i)))) {
				sb.append(data.charAt(i));
			}
		}

		return sb.toString();
	}

	private static boolean isValidBase64Byte(byte b) {
		if (b == '=') {
			return true;
		} else if ((b < 0) || (b >= 128)) {
			return false;
		} else if (decodingTable[b] == -1) {
			return false;
		}

		return true;
	}

	public static void main(String[] args) {
		//String data = "";
	 	//String data = "W3sicXVlc3Rpb25JZCI6Ijg2IiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTDVZaVg1WkNFNmFHNTVMaXQ3N3lNNWJxVTVhKzU1WnU5NWE2MjViZWw1TDJjNUxxNjVaR1k1TDYxNTRxdjZLR001cFMvNTV1NDVhKzU1THE2NTVxRTVaQ0k1ck9WNXAyRDU1dUs1b21BNWE2ZTVwYTk1NXFFNXJPVjViNkw1WWkyNktPQjU1cUU1b09GNWIyaTVwaXY3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN21sWVhtaEk4TkNrSXU1cFdGNW9TUDVvaVc2SUNGNkwrSDVhU3hEUXBETHVlS3IrZTlxdWloak9TNHVnMEtSQzdvdjRmbHBMRT0iLCJ0eXBlQ29kZSI6ImRhbngiLCJxdWVzRGVzYyI6IuetlOahiO 8mmEiLCJhbnN3ZXIiOiJhIiwidXNlckFuc3dlciI6IkIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6Ijg3IiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTDVZaVg1WkNFNmFHNTVMaXQ3N3lNNWJHZTVMcU81THlhNks2aDVweTY1cDZFNVpLTTVMeWE2SzZoNUxxNjVaR1k1WnlvNVlxZTU1Q0c1THlhNks2aDVMcUw1WXFoNkwrSDU2aUw1TGl0NUx1bDVZK0s1WnlvNTY2aDU1Q0c1THlhNks2aDViZWw1TDJjNUxpdDVZK1I1NVNmNTVxRTVaQ0U1NmVONTd1UDVyV081WVd6NTdPNzVwaXY3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN251NC9tdFk3bGhiUG5zN3NOQ2tJdTVMaUs1TGlMNTdxbjVZV3o1N083RFFwREx1V1FpT1M4bWVTNnV1V0ZzK2V6dXcwS1JDN2t2SnJvcnFIbGhiUG5zN3M9IiwidHlwZUNvZGUiOiJkYW54IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphIiwiYW5zd2VyIjoiYSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6Ijg4IiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTDVZaVg1WkNFNmFHNTVMaXQ3N3lNNWJHZTVMcU81WTJWNUwyTjZMU2Y2TFNqNUxxNjU1cUU1cGl2Nzd5SUlDQWdJTys4aWVPQWdnMEtRUzdtczVYa3Vycmt1NlBvb2FnTkNrSXU1WW12NVk2QzZaVy9EUXBETHVTNnV1UzZpK2Vua2VtVnZ3MEtSQzdtZ0x2a3ZKcm9ycUhsdUlnPSIsInR5cGVDb2RlIjoiZGFueCIsInF1ZXNEZXNjIjoi562U5qGI77yaYSIsImFuc3dlciI6ImEiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIyIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiI4OSIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVlXejVMcU81WTJWNUwyTjVaeW81YTZoNXFDNDVZNmY1YWVMNVlldDZLK0I1cGUyNzd5TTVZK1I1NDZ3NWFTVzVwMmw1WTZmNWFlTDVZZXQ2SytCNTVxRTZZZVI2YUtkNXB5SjZaU1o2Syt2Nzd5TTVxMmo1Nkd1NTVxRTVhU0U1NUNHNXBpdjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3bGpwL2xoN3JsaGJmbGg2M29yNEhsalpYa3ZZM3BoNDNsdklBTkNrSXU1bzZsNVkrWDVZZXQ2SytCNVkyVjVMMk41cHUwNXEyajVibTI1WXFnNTV1VzVZV3M1NnVnRFFwREx1V09uK1dIdXVXRnQrV0hyZWl2Z2VXTmxlUzlqZWFidE9hdG8rVzV0dVdLb09lYmx1V0ZyT2Vyb0EwS1JDN251NC9saXA3a3VycmxrWmptbTdUbXJhUGx1YmJtaXFYcG9vYmxyN3pscnFIbWliaz0iLCJ0eXBlQ29kZSI6ImRhbngiLCJxdWVzRGVzYyI6IuetlOahiO 8mmEiLCJhbnN3ZXIiOiJhIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiOTAiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1TGlMNVlpWDVaQ0U2YUc1NUxpdDc3eU01TGlONWJHZTVMcU81THlCNUxpYTVZYUY2WU9vNW82bjVZaTI1YnFVNWIyVDZZRzE1YjZxNTVxRTVZNmY1WWlaNTVxRTVwaXY3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2xpTGJvb2FIbWdLZmxqcC9saUprTkNrSXU1WSt2NXErVTVvQ241WTZmNVlpWkRRcERMdVdGcU9tZG91YUFwK1dPbitXSW1RMEtSQzdwaDQzb3BvSG1nS2ZsanAvbGlKaz0iLCJ0eXBlQ29kZSI6ImRhbngiLCJxdWVzRGVzYyI6IuetlOahiO 8mmEiLCJhbnN3ZXIiOiJhIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiOTEiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1cUM1NW8ydTZLZUU1YTZhNzd5TTVMaUw1WWlYNTd1UDVyV081THFMNmFHNTVZK3Y1THVsNUwyLzU1U281NDZ3NlllUjU3dVQ1NjZYNTVxRTVwaXZLQ0FnSUNBcDQ0Q0NEUXBCTHVXUWtlV0duT1M2cCtXVGdlV0ZyT1dQdU9hVXR1aTByZVdHbk9XSnIrUzZwK1dUZ2VlYWhPV2twK21pbmVpMHArYXN2ZzBLUWk3cGg0Zm90SzNsa1pqbWxLL2t1NWpubW9UbHBLZnBvcDNvdEtmbXJMNE5Da011NklHTTViZWw1YmVsNkxXRTVaS001clNsNkxTMERRcEVMaklnTURBdzVZV0Q1THVsNUxpTDU1cUU2WnUyNXBpZjVwU3Y1WWU2IiwidHlwZUNvZGUiOiJkYW54IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphIiwiYW5zd2VyIjoiYSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjkyIiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTDVZaVg1TGlONWJHZTVMcU82Wk8yNktHTTVaeW81cFN2NUx1WTU3dVQ1NjZYNUxpdDVicVU2WUcxNWE2STU1cUU1WTZmNVlpWjVweUo3N3lJSUNBZ0lDRHZ2SW5qZ0lJTkNrRXU2SWVxNUxpNzZZQ0o1b3VwRFFwQ0x1bVR0dWloak9TNGplV2VxK2FzdmcwS1F5N21nYXJscm9qa3Y2SG5sS2pqZ0lIbHNhWG51cWJrdTVqbXJMNE5Da1F1NkxDQjU1cUU2Wkt4NkwrYjZMQ0I1NXFFNkxTbTQ0Q0I1NVN4NkxDQjVwU3Y2WVdOIiwidHlwZUNvZGUiOiJkYW54IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphIiwiYW5zd2VyIjoiYSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjkzIiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTjZLNjY1cGl2NkxTMzZLNnc1WTJoNkwrWTVwaXY1WWVHNkxTMzZLNnc1WTJoNzd5TTVZVzI2WUNQNXBTdjU1cUU1cGVsNVlpcDU0Nkg1WjJINXBpdjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM0d0xqQTJKUTBLUWk0d0xqQTRKUTBLUXk0d0xqQTFKUTBLUkM0d0xqRWwiLCJ0eXBlQ29kZSI6ImRhbngiLCJxdWVzRGVzYyI6IuetlOahiO 8mmEiLCJhbnN3ZXIiOiJhIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiOTQiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1ckdINXF5KzZaTzI2S0dNNVkrWDU1Q0c1YWVVNW9tWTVMcTY1NXFFNXJHSDVZV1I1YWVVNW9tWTU1U3o2SyszNzd5TTVaQ1I1ckdINVlXbDZaTzI2S0dNNVlxZTU1Q0c1ckdINXF5KzVaQ081YnFVNVpDUjVyR0g1cXkrNUxxNjVvK1E1TDZiNTVxRTVZZXQ2SytCNXBpdjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3bWlaam1sTGJsaDYzb3I0SGxtNTdsalpVTkNrSXU2TCtiNkxTbTVZMlY1WnVlNVkyVkRRcERMdWF4aCtXRmtlV25sT2FKbU9TNXB1UzdtT2FzdnVtQW11ZWZwZVM1cGcwS1JDN21zWWZtckw3bG01N2xqWlU9IiwidHlwZUNvZGUiOiJkYW54IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphIiwiYW5zd2VyIjoiYSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6Ijk1IiwiZXhhbWluYXRpb25Db250ZW50IjoiNXFDNTVvMnU0NENLNUxpcTVMcTY1b21BNWI2WDU2aU81ck9WNDRDTDU1cUU2S2VFNWE2YTc3eU01WnlvNUxpdDVadTk1YUtENVlhRjVwZWc1TDJQNW9tQTVMMkc1WStXNWI2WDVvbUE1YjZYNTVxRTVMaUw1WWlYNWFTVzU3R041TGlxNUxxNjVMaXQ3N3lNNWJHZTVMcU81YkdGNXJDUjU3cXo1NmlPNUxxNjU1cUU1cGl2Nzd5STQ0Q0E0NENBNzd5SjQ0Q0NEUXBCTGs3bG03M2t1Wm52dkl3eU1ERXg1Ym0wTWVhY2lERXc1cGVsNVlXbDVhS0Q3N3lNTWpBeE1lVzV0REV3NXB5SU1URG1sNlhucHJ2bG9vTU5Da0l1VGVXYnZlZVVzdSs4ak9XY3FPV05qdVczcGVTOW5EYmt1S3JtbklnTkNrTXVXZVdidmVTNGdlKzhqREl3TVRIbHViUXo1cHlJTWVhWHBlV0ZwZVdpZysrOGpESXdNVExsdWJRejVweUlNZWFYcGVlbXUrV2lnKys4ak9XRnR1bVh0T1M0dE9hWHR1ZW11K1dpZ3pFd01PV2txUTBLUkM1WTVadTk1TGlaNzd5TU1qQXhNZVc1dERFdzVweUlNZWFYcGVXRnBlV2lnKys4akRJd01UTGx1YlF4TXVhY2lETXg1cGVsNTZhNzVhS0Q3N3lNNVlXMjZaZTA1TGkwNXBlMjU2YTc1YUtETWpqbHBLaz0iLCJ0eXBlQ29kZSI6ImRhbngiLCJxdWVzRGVzYyI6IuetlOahiO 8mmEiLCJhbnN3ZXIiOiJhIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiOTYiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1TGlMNVlpWDZZQ0o2YUc1NUxpdDc3eU01TGlONWJHZTVMcU81NmlPNXBTMjU0bTU1YjZCNTVxRTVwaXY3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN29oNnJtaEwvbWdLY05Da0l1NXBlZzVZRy81b0NuRFFwREx1V2J1dVd1bXVhQXB3MEtSQzdsdkxybGlMYm1nS2M9IiwidHlwZUNvZGUiOiJkYW54IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphIiwiYW5zd2VyIjoiYSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6Ijk3IiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTDVZaVg1TGlONWJHZTVMcU81NmlPNVlxaDVMdWo1NUNHNTRtNTViNkI1NXFFNXBpdjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3bGhhem1yYVBtZ0tjTkNrSXU2SWVxNW9TLzVvQ25EUXBETHVhWG9PV0J2K2FBcHcwS1JDN25pNnpucTR2bWdLYz0iLCJ0eXBlQ29kZSI6ImRhbngiLCJxdWVzRGVzYyI6IuetlOahiO 8mmEiLCJhbnN3ZXIiOiJhIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiOTgiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1N3F6NTZpTzVMcTY1WXFlNTVDRzU2aU81WXFoNTVtNzZLNnc1WkNPNzd5TTVhYUM1cDZjNXBTNTVZK1k1ck9WNWE2YTVMdWo2S0dvNUxxNjc3eU01WWlaNWJxVTViMlQ1WXFlNTVDRzc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3bHZJRGt1SnJucUk3bGlxSG5tYnZvcnJBTkNrSXU1WStZNXB1MDU2aU81WXFoNTVtNzZLNndEUXBETHVXQm5PUzRtdWVvanVXS29lZVp1K2l1c0EwS1JDN21zNmpwbElEbnFJN2xpcUhubWJ2b3JyQT0iLCJ0eXBlQ29kZSI6ImRhbngiLCJxdWVzRGVzYyI6IuetlOahiO 8mmEiLCJhbnN3ZXIiOiJhIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiOTkiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1TGlMNVlpWDVaQ0U2YUc1NUxpdDc3eU01TGlONWJHZTVMcU81cFMvNWJxYzZZZUg2TFN0NWErNTZMR2g2SXlENVp1MDU1cUU1cGl2Nzd5SUlDQWdJTys4aWVPQWdnMEtRUzdsaXA3bGhhem5sS2psazRFTkNrSXU1Wis2NWJ1NjViZWw1NmlMRFFwREx1V1FqdVdMcE9hY2plV0tvUTBLUkM3a3VKUGt1SnJrdXJybWlZMD0iLCJ0eXBlQ29kZSI6ImRhbngiLCJxdWVzRGVzYyI6IuetlOahiO 8mmEiLCJhbnN3ZXIiOiJhIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTAwIiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTDVZaVg1WkNFNmFHNTVMaXQ3N3lNNUxpTjViR2U1THFPNXBTLzVicWM2WWVINkxTdDVvbW42S0dNNXFpaDVieVA1NXFFNXBpdjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3bWxML2x1cHpwbTRia3VLM3BoNGZvdEswTkNrSXU2WU9vNlplbzZadUc1TGl0NlllSDZMU3REUXBETHVXTmxlUzlqZVdJaHVhVm8rbUhoK2kwclEwS1JDN2t1S3JrdXJyb2g2cm9vWXpwaDRmb3RLMD0iLCJ0eXBlQ29kZSI6ImRhbngiLCJxdWVzRGVzYyI6IuetlOahiO 8mmEiLCJhbnN3ZXIiOiJhIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTAxIiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTDVZaVg1WkNFNmFHNTVMaXQ3N3lNNkxTZjZMU2o1NjZoNTVDRzVadTk1YnFUNVkyVjVMaUE2TFNtNW9pMzVMMlQ1N083NTVxRTVwaXY3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2xtNzNscnJibnFJN2xpcUhtZ0x2bHNZQU5Da0l1NkxTaTVwUy82WU9vRFFwREx1UzRyZVdidmVTNnV1YXdrZW1UdHVpaGpBMEtSQzdsbFlibGlxSHBnNmc9IiwidHlwZUNvZGUiOiJkYW54IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphIiwiYW5zd2VyIjoiYSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEwMiIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVpDRTZhRzU1TGl0Nzd5TTVMaU41YkdlNUxxTzVMeWE2SzZoNklHTTVMaWE2WUdUNWI2MzVwV1o2SUt5NTVxRTVZYUY1YTY1NTVxRTVwaXY3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2t2SnJvcnFIb2dZemt1SnJwZ1pQbHZyZm9wNExsdjdYbWxabm9ncklOQ2tJdTVMeWE2SzZoNklHTTVMaWE2WUdUNWI2MzZLZUU2SXlENXBXWjZJS3lEUXBETHVTOG11aXVvZWlCak9TNG11bUJrK1crdCtpdHB1ZWt1dWFWbWVpQ3NnMEtSQzdrdkpyb3JxSG9nWXprdUpycGdaUGx2cmZsdmFMbHZJL21sWm5vZ3JJPSIsInR5cGVDb2RlIjoiZGFueCIsInF1ZXNEZXNjIjoi562U5qGI77yaYSIsImFuc3dlciI6ImEiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIyIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMDMiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1TGlMNVlpWDVZV3o1THFPNUx5YTZLNmg2SUdNNUxpYTZZR1Q1YjYzNktHbzZMK3c1TGl0Nzd5TTVxMmo1Nkd1NTVxRTVwaXY3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2t2SnJvcnFIb2dZemt1SnJwZ1pQbHZyZmxqNDNtbUtEbnU1L21zcnZvZ0lYbm1vVG1oSS9sdjVmbGtvem1oTC9tbkpzTkNrSXU1THlhNks2aDZJR001TGlhNllHVDViNjM1NVN4NVp1OTVhNjI1Ynk2NVlpMjVZcWI1TCtkNlpxYzVhNmU1cGE5RFFwREx1UzhtdWl1b2VpQmpPUzRtdW1CaytXK3QrUzRqZWltZ2VheGd1aXdnK2FWdE9TOG11aXVvZVM2dXVXUm1PZWFoT1drbHVXY3FPaWhqT1M0dWcwS1JDN2t2SnJvcnFIb2dZemt1SnJwZ1pQbHZyZmxoYmZtbklubm03amxyN25ucUxQbHJwcm1nS2Zsa296bHViL21zNXZubW9UbnBMN2t2SnJtZ0tjPSIsInR5cGVDb2RlIjoiZGFueCIsInF1ZXNEZXNjIjoi562U5qGI77yaYSIsImFuc3dlciI6ImEiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIyIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMDQiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1TGlMNVlpWDVaQ0U2YUc1NUxpdDc3eU01YkdlNUxxTzVMeWE2SzZoNXJPVjViNkw1WWkyNWJxbTU1cUU1TDJjNTVTbzZJeUQ1WnUwNUw2bjZZZU41THFPNkxDRDVwVzA1NXFFNXBpdjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3a3ZKcm9ycUhrdXJybGtaam5tb1Ruc3I3bnBaN2t1SmJubFl3TkNrSXU1THlhNks2aDVMcTY1WkdZNTVxRTVvU1A2SytHNWIyaTVvQ0JEUXBETHVTOG11aXVvZVM2dXVXUm1PZWFoT1drbHVXY3FPaWhqT1M0dXVXU2pPZTdrK2FlbkEwS1JDN2t2SnJvcnFIa3VycmxrWmpubW9UbHBKYmxuS2pvb1l6a3VMcmxrb3puc3I3bnBaN2t1SmJubFl3PSIsInR5cGVDb2RlIjoiZGFueCIsInF1ZXNEZXNjIjoi562U5qGI77yaYSIsImFuc3dlciI6ImEiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIyIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMDUiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1TGlMNVlpWDVaQ0U2YUc1NUxpdDc3eU01YkdlNUxxTzVMeWE2SzZoNklHTTVMaWE2WUdUNWI2MzU1cUU1WW1ONW8rUTVaS001WWFGNVp5bzZLYUI1ckdDNTVxRTVwaXY3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2x1NG5tdElIb2g2cmx2b3NOQ2tJdTU0aXg1YktYNXBXczVMaWFEUXBETHVhUGtPbXJtT2FLZ09pRHZRMEtSQzdsblpybWpJSGxoNGJsaUprPSIsInR5cGVDb2RlIjoiZGFueCIsInF1ZXNEZXNjIjoi562U5qGI77yaYSIsImFuc3dlciI6ImEiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIyIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiI2NzMiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiJZWFJsIiwidHlwZUNvZGUiOiJkYW54IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphIiwiYW5zd2VyIjoiYSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEwNiIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMNmQ1NFduNktlRTVhNmE3N3lNNXJLaDVweUo2SzYrNTcydTVMeWE2SzZoNXB5NjVwNkU1TGlVNXB5cTZZV041NzJ1NUx5YTZLNmg1THE2NVpHWTU1cUU1WTJWNUwyTjc3eU01WSt2NUx1bDVxQzU1bzJ1NDRDSzVMdWo1NUNHNks2dzZMU201NjZoNTVDRzVwcUM2S0dNNVlxZTVyT1Y0NENMNWFlVTVvbVk1THVqNTVDRzZLNnc2TFNtNTVxRTVweTY1cDZFNXB5Sjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3a3ZKcm9ycUhsdUlqa3VvdmxpcUhtaVlBTkNrSXU1YjZMNWJpSTVMcUw1WXFoNW9tQURRcERMdWFNZ2VhY2llUzdvK2VRaHVpdXNPaTBwdWl1dU9XUHIraXZnZVM1cHVlYWhPV0Z0dVM3bHVTNHF1UzZ1ZzBLUkM3bWpJSG1uSW5rdTZQbmtJYm9yckRvdEtib3JyamxqNi9vcjRIa3VhYm5tb1RsaGJia3U1Ymt1NlBua0lib3JyRG90S2JtbkxybW5vUT0iLCJ0eXBlQ29kZSI6ImR1b3giLCJxdWVzRGVzYyI6IuetlOahiO 8mmE7YjtjO2QiLCJhbnN3ZXIiOiJhO2I7YztkIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTA3IiwiZXhhbWluYXRpb25Db250ZW50IjoiNUx5YTZLNmg1TGlUNUxpYTZJR001WXFoNXBpdjVZeTY1WWlHNUx5YTZLNmg1THE2NVpHWTVMdU81THFMNUxpYTVZcWg1YmVsNUwyYzU1cUU1b3FBNXB5djU2Mko1N3FuNzd5TTVMeWE2SzZoNUxpVDVMaWE2SUdNNVlxaDVweUo3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2xpcW5ua0lia3ZKcm9ycUhsdUlnTkNrSXU1THlhNks2aDViaUlEUXBETHVtcm1PZTZwK1M4bXVpdW9lVzRpQTBLUkM3a3ZKcm9ycUhsa1pnPSIsInR5cGVDb2RlIjoiZHVveCIsInF1ZXNEZXNjIjoi562U5qGI77yaYTtiO2M7ZCIsImFuc3dlciI6ImE7YjtjO2QiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIyIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMDgiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1bzZJNW9TUDQ0Q0I1b3lINUwyLzQ0Q0I1Ynk2NUx1azVMeWE2SzZoNXB5NjVwNkU0NENCNUx5YTZLNmg1THE2NVpHWTVZK0s1WVcyNUx1VzVMcTY1WkdZNUx5cTZZQ2c0NENCNVkrWTZZQ2c1THlhNks2aDVZZXQ2SytCNDRDQjVMeWE2SzZoNkxTbTU3Qy83N3lNNTd5VzVZaTI2Sm1hNVlHSDZMU2k1WXFoNUx5YTZLNmg1b3FsNVpHSzVvaVc2SUNGNlpxUTVZeS80NENCNXBXRjVvU1A2WlNBNXErQjVMNmQ1ck9WNWJxVTViMlQ1TCtkNWEyWTU1cUU1THlhNks2aDVZZXQ2SytCNDRDQjVMeWE2SzZoNkxTbTU3Qy80NENCNkxTaTVZcWg1THlhNks2aDVvcWw1WkdLNzd5TTViQ2E1TGlONXA2RTVvaVE1NHF2NTcycTU1cUU3N3lNNlptazVMNmQ1ck9WNVkrdjVhU0U1THVsNktlRTVhNmE1cFd3NmFLZDU1cUU1NzJhNXF5KzVhU1c3N3lNNWErNTViR2U1THFPNVp1OTVhNjI1YmVsNUwyYzVMcTY1WkdZNTVxRTc3eU02TCtZNWJxVTViMlQ1NVN4NVlXMjVvbUE1WnlvNVkyVjVMMk41b2lXNklDRjVweUo1WVd6NVkyVjVMMk41TDZkNXJPVjU3dVo1THFJNTVxRTZLR001cFMvNWFTRTVZaUc1cHlKNzd5SUlDQWdJTys4aWVPQWdnMEtRUzdwbVkzbnVxY05Da0l1NXBLazZJR01EUXBETHVpdHB1V1JpZzBLUkM3bHZJRHBtYVE9IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEwOSIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVpDRTZhRzU1TGl0Nzd5TTViR2U1THFPNWJxVTViMlQ2SzYrNTcydTU1cUU1THlhNks2aDZMU201N0MvNXB5Sjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3bWw2WG9yckRvdEtZTkNrSXU1cGlPNTd1RzZMU21EUXBETHVXRnR1UzdsdWkraGVXS3FlYUFwK2kwcHVld3Z3MEtSQzdtZ0x2b3RLWT0iLCJ0eXBlQ29kZSI6ImR1b3giLCJxdWVzRGVzYyI6IuetlOahiO 8mmE7YjtjO2QiLCJhbnN3ZXIiOiJhO2I7YztkIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTEwIiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTDVZaVg1WVd6NUxxTzVyT281WWFNNUx5YTZLNmg1YmlJNWE2aDZLNmg1TGlPNVkyVjVMMk41WWFGNllPbzVhNmg2SzZoNTVxRTVZV3o1N083NTVxRTZLR282TCt3NUxpdDc3eU01cTJqNTZHdTU1cUU1cHlKNzd5SUlDQWdJTys4aWVPQWdnMEtRUzdrdUtUb2dJWG5tb1RscnFIb3JxSG9nWXpvdEtQbGo0cmt2WnpubEtqa3VJM2xzTDNubTdqbGtJd05Da0l1NXJPbzVZYU01THlhNks2aDViaUk1YTZoNks2aDVwaXY1TGlBNTZlTjVZK1g1b21ZNWE2aDZLNmhEUXBETHVTNHBPaUFoZWVhaE9XdW9laXVvZWFXdWVXOGorV3VqT1dGcU9lYnVPV1FqQTBLUkM3bXM2amxob3prdkpyb3JxSGx1SWpscnFIb3JxSGxyb3psaGFqbmk2em5xNHZrdW83b29xdmxycUhvcnFIbGpaWGt2WTA9IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjExMSIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVpDRTZhRzU1TGl0Nzd5TTVMaU41YkdlNUxxTzVwU3Y1NldvNVorNjVweXM1YjJUNUxxTDVMcTY1NXFFNXB5Sjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3a3U1am1yTDdrdXJvTkNrSXU1WWU2NTZXbzVMcTZEUXBETHVTL25laXZnZVM2dWcwS1JDN21pYi9saFpIa3Vybz0iLCJ0eXBlQ29kZSI6ImR1b3giLCJxdWVzRGVzYyI6IuetlOahiO 8mmE7YjtjO2QiLCJhbnN3ZXIiOiJhO2I7YztkIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTEyIiwiZXhhbWluYXRpb25Db250ZW50IjoiNXFDNTVvMnU0NENLNUxpdDVZMk81THE2NXJDUjVZV3g1WktNNVp1OTU2V281bzJ1NXJPVjQ0Q0w1NXFFNktlRTVhNmE3N3lNNUxpTDVZaVg1cHlKNVlXejZaTzI2S0dNNXB5czU2V281NXFFNVpDRTZhRzU2S0dvNkwrdzVMaXQ3N3lNNXEyajU2R3U1NXFFNXB5Sjc3eUlJQ0FnSUNEdnZJbmpnSUlOQ2tFdTVxQ0g1cGlPNG9DYzU0Nnc2WWVSNG9DZDVhMlg1cUMzNTVxRTZaTzI2S0dNNXB5czU2V281THVONTRTMjVMaU41YjZYNW8rUTVZK1c1NDZ3NlllUkRRcENMdW1UdHVpaGpPYWNyT2VscU9lVXNlV0h1dWVscU9TNnV1ZXR2dVdQa1EwS1F5N3BrN2Jvb1l6bW5Lem5wYWpubW9UbWo1RG5wTHJrdTVqbXJMN21uSi9vaDZybGg3cm5wYWptbDZYb3RiZm1uSURwbGIva3VJM2x2cGZvdG9Yb3Y0Y3k1TGlxNXB5SURRcEVMdW1UdHVpaGpPYWNyT2VscU9XL2hlbWh1K2FjaWVhWG9PYWRvZVM3dHVhVXIrUzdtT2VhaE9hSnYraXZ1Zz09IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjExMyIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNWJHZTVMcU81cFN2NUx1WTU3dVQ1NjZYNUxpNzVMMlQ1NXFFNXB5Sjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3bGhwem1uWkhrdjZIbmxLam5wTDROQ2tJdTVaK081YmlDNUwraDU1U281NlMrRFFwREx1V05sZVM5amVXU2pPUzRxdVM2dWcwS1JDN3BrN2Jvb1l3PSIsInR5cGVDb2RlIjoiZHVveCIsInF1ZXNEZXNjIjoi562U5qGI77yaYTtiO2M7ZCIsImFuc3dlciI6ImE7YjtjO2QiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIyIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMTQiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1TGlMNVlpWDVhKzU1YTJZNXF5KzVMcTY1YnlBNTZ1TDZaTzI2S0dNNTd1VDU2Nlg2TFNtNW9pMzU1cUU2S0dvNkwrdzVMaXQ3N3lNNXEyajU2R3U1NXFFNXB5Sjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3cGs3Ym9vWXpsdXBUbHNJYmxyWmptckw3a3Vycm5tb1RsdklEbWlMZm5sTFBvcjdma3VhYmpnSUhubTdqbGhiUG5tb1RvcjRIbW1JN21sb2ZrdTdib3Y1dm9vWXpscnFIbW42WHZ2SXpucktibGtJamx2SURtaUxmbW5hSGt1N2JubW9UbHVwVGxpcDdua0libHZJRG1pTGZtaVl2bnU2M3Z2SXpsdWJibHNhWG9vWXpsa0pIa3VLM2xtNzNrdXJybXNKSHBrN2Jvb1l6bHZaUGxuTERsaUlibWxLL29vWXpscElmbW9Zam5tb1RrdVlubGlxRU5Da0l1NWJ5QTU2dUw2Wk8yNktHTTU3dVQ1NjZYNkxTbTVvaTM1YnFVNWFHcjVZYVo1YnlBNW9pMzU1U3o2SyszNUxtbTc3eU01Ym0yNW8rUTVMcWs1cHlKNVlXejZLK0I1cGlPNXBhSDVMdTJEUXBETHVXOGdPZXJpK21UdHVpaGpPZTdrK2V1bCtpMHB1YUl0K2FYdHUrOGpPbVR0dWloak9XNmxPUzRqdVd0bU9hc3Z1UzZ1dWV0dnVpdW91bVR0dWloak9lN2srZXVsK2kwcHVhSXQrZXVvZWVRaHVXTmoraXVydSs4ak9hWWp1ZWhydVdQak9hV3VlZWFoT2FkZytXSXFlUzRqdVM1aWVXS29RMEtSQzdwazdib29Zemx1cFRsdTdybnE0dmxyWmptckw3a3VycnBvb1RubFpubnJiN25xNkRsamFIbmlZZnZ2SXpsdWJibHNJYm5yYjducTZEbHZJL21vTGZsa296bW5JbmxoYlBvcjRIbW1JN21sb2ZrdTdibm1vVGxqcC9rdTdibWlKYmxwSTNsamJEa3U3Ym5sWm5sclpqbHZaTG1vYU09IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjExNSIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNllDSjZhRzU1TGl0Nzd5TTViR2U1THFPNTZpTzVwUzI1NmlMNWJxUDVyT1Y1NXFFNXB5Sjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3bnVyUG5xSTducUl2bHVvL21zNVVOQ2tJdTU2aU81cFMyNTY2aDU1Q0c1ck9WRFFwREx1V1BrZWVscU9ldW9lZVFodWF6bFEwS1JDN25xSTdsaXFIa3Vvbm9ycTdscElUbmtJYm1zNVU9IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjExNiIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVpDRTZhRzU1TGl0Nzd5TTVwNkU1b2lRNTZpTzVyT1Y1TGlKNUxpcTVweUE1Wis2NXB5czZLYUI1N1NnNTVxRTVweUo3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2x2b0hucUk3a3Vyb05Da0l1NTdxejU2aU81TG1KNVlxaDVMcTZEUXBETHVXK2dlZW9qdVd2dWVpeG9RMEtSQzducUk3bmpvYz0iLCJ0eXBlQ29kZSI6ImR1b3giLCJxdWVzRGVzYyI6IuetlOahiO 8mmE7YjtjO2QiLCJhbnN3ZXIiOiJhO2I7YztkIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTE3IiwiZXhhbWluYXRpb25Db250ZW50IjoiNWFLZTVZQzg1NmlPNWI2QjU2aU82SXlENVp1MDVMaXQ3N3lNNWJxVTU2aU81cHlONVlxaDVweUo3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN21zTFRvdDYvb3Y1RG92cFBtbkkzbGlxRU5Da0l1NklpcTU2bTY2TCtRNkw2VDVweU41WXFoRFFwREx1ZXVvZW1CaytpL2tPaStrK2FjamVXS29RMEtSQzdub0pUbGo1SGxrb3ptaW9EbW5LL21uSTNsaXFFPSIsInR5cGVDb2RlIjoiZHVveCIsInF1ZXNEZXNjIjoi562U5qGI77yaYTtiO2M7ZCIsImFuc3dlciI6ImE7YjtjO2QiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIyIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMTgiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1TGlMNVlpWDVaQ0U2YUc1NUxpdDc3eU01YkdlNUxxTzVvaVI1WnU5NTZpTzVxeSs1YjZCNXBTMjVwYTU1YnlQNTVxRTVweUo3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2t1NlBtaWFQa3U2UG52TFFOQ2tJdTVMdWo1cFMyNUx1ajU3eTBEUXBETHVXbmxPYUptT1crZ2VhVXRnMEtSQzdscnBybW5KL2xycHJwb3AzbHZvSG1sTFk9IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjExOSIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVpDRTZhRzU1TGl0Nzd5TTVMaU41cGl2NXBTLzVicWM2WWVINkxTdDVwYTU1YnlQNTVxRTVweUo3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN3Bnb0RvcjdmbWk1dm1vSWZwaDRmb3RLME5Da0l1Nlp1RzVMaXQ2WWVINkxTdERRcERMdVdObGVTNGdPYWRwZWE2a09tSGgraTByUTBLUkM3bGlJYm1sYVBwaDRmb3RLMD0iLCJ0eXBlQ29kZSI6ImR1b3giLCJxdWVzRGVzYyI6IuetlOahiO 8mmE7YjtjO2QiLCJhbnN3ZXIiOiJhO2I7YztkIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMiIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTIwIiwiZXhhbWluYXRpb25Db250ZW50IjoiNUxpTDVZaVg1WkNFNmFHNTVMaXQ3N3lNNWErNTZMU2k1cFMvNTV1MDVvNmw1cFN2NUx1WTZLKzA1ck9WNXEyajU2R3U1NXFFNXB5Sjc3eUlJQ0FnSU8rOGllT0FnZzBLUVM3bmxMSG90S0xtbEwvcGc2anBsNmpsa0pIa3VLM2xtNzNrdXJybXNKSHBrN2Jvb1l6bGtvemt1NlBua0licGs3Ym9vWXpucmI3bGo1SG1sSy9rdTVqbWpJZmt1NlFOQ2tJdTVMdWo1NUNHNlpPMjZLR001cUM1NW8ydTVwU3Y1THVZNW95SDVMdWs2WUNhNkwrSDVadTk1YnFUNVkyVjVMaUE2TFNtNW9pMzVMMlQ1N083NkwrYjZLR001cFN2NUx1WURRcERMdVM3bytlUWh1bVR0dWloak9hZ3VlYU5ydWFVcitTN21PYU1oK1M3cE9XUHF1aUR2ZVd3aHVpMWhPbUhrZWVidE9hT3BlYVVyK1M3bU9XSXNPZVVxT2FzdnVXTmxlUzlqUTBLUkM3a3U2UG5rSWJwazdib29Zem1vTG5tamE3bWxLL2t1NWptaklma3U2VGxqNi9rdTZYbHNJYm90WVRwaDVIbm03VG1qcVhtbEsva3U1amxpTERtbExibXJMN2t1cm89IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEyMSIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVpDRTZhRzU1TGl0Nzd5TTViR2U1THFPNXBTLzVicWM2WWVINkxTdDU1dVI1NTJqNTY2aDU1Q0c2WU9vNlplbzVicVU1YjJUNWErNTZadUc1TGl0NlllSDZMU3Q1cHk2NXA2RTZMK2I2S0dNNklDRDVxQzQ1NXFFNUxxTDZhRzU1cHlKNzd5SUlDQWdJTys4aWVPQWdnMEtRUzdtbkkzbGlxSG90S2pwaDQ4TkNrSXU1TCtoNktxSjU0cTI1WWExRFFwREx1YWNpZWFYb09pL25lYXpsZWloak9TNHVnMEtSQzdvaW9MbnVxYm90WVRwaDVIbWxZam1ucHc9IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEyMiIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVpDRTZhRzU1TGl0Nzd5TTViR2U1THFPNklHTTVMaWE2WUdUNWI2MzVMMmM1NVNvNTVxRTVweUo3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2t2NFBvdjV2b2dZemt1SnJtdEx2bGlxam5tb1RsZ2FYbHVyZm92NXZvb1l3TkNrSXU1YTZlNTQ2dzVvaVk1NVdsNTV1dTVxQ0g1NXFFNlllTjZLYUI1TCtkNksrQkRRcERMdWFQa09tcm1PaUJqT1M0bXVTNnV1V1JtT2Uwb09pMHFPZWFoT2FKaSthdXRRMEtSQzdscjdubnBMN2t2SnJwZ1pQbHZyZnBvNDdsc0pya3ZKcmt1cWZubEovbnA2L21ub0hubW9UbHZiSGxrNDA9IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEyMyIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVlXejVMcU81THlhNks2aDZJR001TGlhNllHVDViNjM0b0NjNWE2aTZLZUM1WVdzNXEyajRvQ2Q1NXFFNktHbzZMK3c1TGl0Nzd5TTVxMmo1Nkd1NTVxRTVweUo3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN2t2SnJvcnFIb2dZemt1SnJtdEx2bGlxam9wb0hsajYvcG5hRG5uSi9scnA3bm1vVGxqNDNtbUtBTkNrSXU1TGk2NTY2aDU1Q0c2SUNGNWIyVDVZK0M2TENMNzd5TTVMaTY1NjZoNTVDRzVyUzc1WXFvNXB5TjVZcWhEUXBETHVhWXIrUzhtdWl1b2VpQmpPUzRtdW1CaytXK3QrYUpnT2kvdmVheGd1ZWFoT2VRaHVhRHMrZWJydWFnaHcwS1JDN21qSW5rdW92bmlhbm5tb1Rtbkt6bW5hWHBuYUxubTY3bGpydmxqNDNtbUtEdnZJemt1STNtanJybW5ZTGt1S3JrdXJybm1vVGt1THZvcDRMbWhML21uSnM9IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEyNCIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaUw1WWlYNVlXejVMcU80b0NjNTRpeDViS1g1cFdzNUxpYTRvQ2Q1NXFFNkthQjVyR0M1TG1MNUxpQTVwaXY1YitnNUxxTzZJR001YTZJNTVxRTZLR282TCt3NUxpdDc3eU01cTJqNTZHdTU1cUU1cHlKNzd5SUlDQWdJTys4aWVPQWdnMEtRUzdsdjZEbHJwN2t1bzdsbTczbHJyWU5Da0l1NWIrZzVhNmU1THFPNXB5TjVZcWg1YSs1NkxHaERRcERMdVcvb09XdW51UzZqdWVrdnVTOG11V0ZyT1M4bHcwS1JDN2x2NkRscnA3a3VvN29vcXZscnFIb3JxSGxqWlhrdlkwPSIsInR5cGVDb2RlIjoiZHVveCIsInF1ZXNEZXNjIjoi562U5qGI77yaYTtiO2M7ZCIsImFuc3dlciI6ImE7YjtjO2QiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIyIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMjUiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1TGlMNVlpWDVZV3o1THFPNUx5YTZLNmg2SUdNNUxpYTZZR1Q1YjYzNWJ1NjZLNis1NXFFNTd1RTU3dUg1TGlPNWE2ZTVwYTk1TGl0Nzd5TTVicVU1YjJUNVkrUjVveWw1TDJjNTVTbzU1cUU2WU9vNlplbzVvaVc1WTJWNUwyTjVweUo3N3lJSUNBZ0lPKzhpZU9BZ2cwS1FTN290S0xtbEwvcGc2anBsNmdOQ2tJdTVMeUI1THFMNUxpYTVZMlY1TDJORFFwREx1UzhtdWl1b2VpQmpPUzRtdVdib3VTOWt3MEtSQzdrdkpyb3JxSGxyYWJtbksvbG02TGt2Wk09IiwidHlwZUNvZGUiOiJkdW94IiwicXVlc0Rlc2MiOiLnrZTmoYjvvJphO2I7YztkIiwiYW5zd2VyIjoiYTtiO2M7ZCIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjIiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEyNiIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMeWE2SzZoNUxxNjVaR1k1WnlvNVlxZTU1Q0c1THlhNks2aDViZWw1TDJjNUxxazVvNmw1WW1ONWIrRjZhRzc1N3lXNVlpMjU2ZTc1THFrNXJpRjVZYU00NENDNWE2ZTZLR001THlhNks2aDU1UzE1NjZYNVl5VzU1cUU1WTJWNUwyTjc3eU01THVPNUxxTDZLK2w2YUc1NWJlbDVMMmM1NXFFNTZlNzVMcWs1THE2NVpHWTVicVU1WnlvNTZlNzVMcWs1cmlGNVlhTTVMaUs1WWlYNXBpTzVMeWE2SzZoNkwydjVMdTI1WStLNWErRzU2Q0I3N3lNNUwyRzVwZWc2YUc3NVlpWDVwaU81NXU0NVlXejVwV3c1bzJ1NTV1WTQ0Q0I1Nk9CNWJpbTU2Mko1WWFGNWE2NTQ0Q0M3N3lJSUNBZ0lPKzhpUT09IiwidHlwZUNvZGUiOiJwYW5kIiwicXVlc0Rlc2MiOiLnrZTmoYjvvJp0cnVlIiwiYW5zd2VyIjoidHJ1ZSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjEiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEyNyIsImV4YW1pbmF0aW9uQ29udGVudCI6IjQ0Q0s1THlCNUxpYTVMeWE2SzZoNVllRzVZaVpMZVdmdXVhY3JPV0hodVdJbWVPQWkrV3hudVM2anVTOG11aXVvZW1EcU9tWHFPaW5oT2Vyb09PQWd1KzhpQ0FnSUNEdnZJaz0iLCJ0eXBlQ29kZSI6InBhbmQiLCJxdWVzRGVzYyI6IuetlOahiO 8mnRydWUiLCJhbnN3ZXIiOiJ0cnVlIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMSIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTI4IiwiZXhhbWluYXRpb25Db250ZW50IjoiNW9pUjVadTk1YmV5NTd1UDVaKzY1cHlzNWIyaTVvaVE2WmkyNXFLdjVieVA1NXFFNUx5YTZLNmg1TGlUNUxpYTVMcTY1b21ONksrRTVMdTM1cHk2NVlpMjQ0Q0M3N3lJSUNBZ0lPKzhpUT09IiwidHlwZUNvZGUiOiJwYW5kIiwicXVlc0Rlc2MiOiLnrZTmoYjvvJp0cnVlIiwiYW5zd2VyIjoidHJ1ZSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjEiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEyOSIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVvK1E1TDZiNkptYTVZR0g1NXFFNUx5YTZLNmg2TFdFNXBhWjVwaXY1TGlBNTZlTjZMK2Q1ck9WNktHTTVMaTY0NENDNzd5SUlDQWdJTys4aVE9PSIsInR5cGVDb2RlIjoicGFuZCIsInF1ZXNEZXNjIjoi562U5qGI77yadHJ1ZSIsImFuc3dlciI6InRydWUiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIxIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMzAiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1NldvNW8ydTViMlQ1THFMNUxxNjVZaUc1TGk2NVorNjVweXM1YjJUNUxxTDVMcTY1WktNNloyZTVaKzY1cHlzNWIyVDVMcUw1THE2NUxpazU3Rzc0NENDNzd5SUlDQWdJTys4aVE9PSIsInR5cGVDb2RlIjoicGFuZCIsInF1ZXNEZXNjIjoi562U5qGI77yadHJ1ZSIsImFuc3dlciI6InRydWUiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIxIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMzEiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1WnVnNWJlbDVMMmM2WnlBNkthQjc3eU01YnlBNW9pMzZaTzI2S0dNNVkrdjVMdWw1WkNSNTZTKzVMeWE1WVdzNUx5WDVZV3M1YnlBNWEyWTVxeSs1THE2NTVxRTVhMlk1cXkrNUwraDVvR3Y0NENDNzd5SUlDQWdJTys4aVE9PSIsInR5cGVDb2RlIjoicGFuZCIsInF1ZXNEZXNjIjoi562U5qGI77yadHJ1ZSIsImFuc3dlciI6InRydWUiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIxIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMzIiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1NDZ3NlllUjU3dVQ1NjZYNVlXMzVweUo1TGlONXBpVDVhNlA2S2VDNW82bjVZaTI1WktNNTY2aDU1Q0c1NXFFNTRtNTU0SzU0NENDS0NBZ0lDQXAiLCJ0eXBlQ29kZSI6InBhbmQiLCJxdWVzRGVzYyI6IuetlOahiO 8mnRydWUiLCJhbnN3ZXIiOiJ0cnVlIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMSIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTMzIiwiZXhhbWluYXRpb25Db250ZW50IjoiNVlxZTU1Q0c1YWVVNW9tWTVwUzI1cXkrNUxpYTVZcWg3N3lNNWFlVTVvbVk1THE2NWIrRjZhRzc1bytRNUw2YjVZVzI1NmlPNVlxaDU1bTc2SzZ3NksrQjVaS002SkNsNUxpYTVvbW41NFduNDRDQzc3eUk0NENBNDRDQTc3eUoiLCJ0eXBlQ29kZSI6InBhbmQiLCJxdWVzRGVzYyI6IuetlOahiO 8mnRydWUiLCJhbnN3ZXIiOiJ0cnVlIiwidXNlckFuc3dlciI6IiIsInNjb3JlIjoiMSIsInVzZXJTY29yZSI6IjAiLCJyaWdodCI6IkZhbHNlIiwiYWNjb3VudENvZGUiOiJudWxsIiwib3B0ZXJVc2VyIjoiIiwib3B0ZXJEYXRlIjoiIn0seyJxdWVzdGlvbklkIjoiMTM0IiwiZXhhbWluYXRpb25Db250ZW50IjoiNWFlVTVvbVk1THlCNUxpYTVvaVc1TGlxNUxxNjVZcWc1YmVsNVl5VzVhYUc1Wk9CNzd5TTZZTzk1NVN4NVkrWDVvbVk1cGE1NUx1ajVwUzI1THVqNTd5MDVyYUk2TFM1NTZpTzQ0Q0NLQ0FnSUNBcCIsInR5cGVDb2RlIjoicGFuZCIsInF1ZXNEZXNjIjoi562U5qGI77yadHJ1ZSIsImFuc3dlciI6InRydWUiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIxIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMzUiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI2WjJlNWJHRjVyQ1I1THlCNUxpYTVaeW81TGl0NVp1OTVhS0Q1WWFGNXB5cTZLNis1NnVMNXB5NjVwNkU0NENCNVp5NjVvbUE1NXFFNzd5TTVvaVc2SUNGNkptOTZLNis1NnVMNXB5NjVwNkU0NENCNVp5NjVvbUE1TDJHNVkrVzViNlg1NXFFNW9tQTViNlg1TGlPNVlXMjVvbUE2SzYrNXB5NjVwNkU0NENCNVp5NjVvbUE1cktoNXB5SjVhNmU2Wm1GNklHVTU3Tzc1NXFFNzd5TTVicVU1YjJUNWJDeDVZVzI1cDJsNXJxUTVMcU81TGl0NVp1OTVhS0Q1WWFGNTVxRTVvbUE1YjZYNTd5MDU3cXo1THlCNUxpYTVvbUE1YjZYNTZpTzQ0Q0M3N3lJNDRDQTQ0Q0E3N3lKIiwidHlwZUNvZGUiOiJwYW5kIiwicXVlc0Rlc2MiOiLnrZTmoYjvvJp0cnVlIiwiYW5zd2VyIjoidHJ1ZSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjEiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEzNiIsImV4YW1pbmF0aW9uQ29udGVudCI6IjU2aU81cFMyNXBpdjVMaUE1NmVONVlpRzZZV041YjJpNWJ5UDQ0Q0M3N3lJSUNBZ0lPKzhpUT09IiwidHlwZUNvZGUiOiJwYW5kIiwicXVlc0Rlc2MiOiLnrZTmoYjvvJp0cnVlIiwiYW5zd2VyIjoidHJ1ZSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjEiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEzNyIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVhS2U1WUM4NTZpTzVMaVQ1NVNvNVkrUjU2V281WStxNlptUTVMcU81YUtlNVlDODU2aU81TGlBNklpczU3cXo1NmlPNUxxNjZhS0c2TFN0NUwyLzU1U280NENDNzd5SUlDQWdJTys4aVE9PSIsInR5cGVDb2RlIjoicGFuZCIsInF1ZXNEZXNjIjoi562U5qGI77yadHJ1ZSIsImFuc3dlciI6InRydWUiLCJ1c2VyQW5zd2VyIjoiIiwic2NvcmUiOiIxIiwidXNlclNjb3JlIjoiMCIsInJpZ2h0IjoiRmFsc2UiLCJhY2NvdW50Q29kZSI6Im51bGwiLCJvcHRlclVzZXIiOiIiLCJvcHRlckRhdGUiOiIifSx7InF1ZXN0aW9uSWQiOiIxMzgiLCJleGFtaW5hdGlvbkNvbnRlbnQiOiI1WTYvNTdxbjVMcTY1ckNSNXBTLzVicWM1cUM1NW8ydTVweXM1N3FuNXBTLzVicWM2WWVINkxTdDZaeUE2S2FCNVkrdjVMdWw2SzYrNTZ1TDZadUc1TGl0NlllSDZMU3Q1cHk2NXA2RTQ0Q0M3N3lJSUNBZ0lPKzhpUT09IiwidHlwZUNvZGUiOiJwYW5kIiwicXVlc0Rlc2MiOiLnrZTmoYjvvJp0cnVlIiwiYW5zd2VyIjoidHJ1ZSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjEiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjEzOSIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVZV3M1YnlBNW91YjVxQ0g1WkNPNXJLaDVweUo1TDZiNWJxVTVaV0c1b3FWNXFDSDVvaVc2SUNGNXJLaDVweUo1WkNJNXFDODVxQ0g1NXFFNW9pVzZJQ0Y2WWVONXBhdzVvdWI1cUNINXB5cTZJTzk1b2lRNTZ1TDU1cUU3N3lNNVkrdjVMdWw2WWVINTVTbzZZS0E2SyszNW91YjVxQ0g2WWVINkxTdDQ0Q0M3N3lJSUNBZ0lPKzhpUT09IiwidHlwZUNvZGUiOiJwYW5kIiwicXVlc0Rlc2MiOiLnrZTmoYjvvJp0cnVlIiwiYW5zd2VyIjoidHJ1ZSIsInVzZXJBbnN3ZXIiOiIiLCJzY29yZSI6IjEiLCJ1c2VyU2NvcmUiOiIwIiwicmlnaHQiOiJGYWxzZSIsImFjY291bnRDb2RlIjoibnVsbCIsIm9wdGVyVXNlciI6IiIsIm9wdGVyRGF0ZSI6IiJ9LHsicXVlc3Rpb25JZCI6IjE0MCIsImV4YW1pbmF0aW9uQ29udGVudCI6IjVMaXQ1WnU5NUxxNjVyQ1I2Wk8yNktHTTVMdWo2S0dvNXBTLzVicWM2SzYrNTcydTVadTk1YnFUNVkyVjVMaUE2TFNtNW9pMzVMMlQ1N083NDRDQzc3eUlJQ0FnSU8rOGlRPT0iLCJ0eXBlQ29kZSI6InBhbmQiLCJxdWVzRGVzYyI6IuetlOahiO ";
	 	String str = "";
	 	String data = "";
		//byte[] result = Base64.encode(data.getBytes());
//		System.out.println(data);
//		System.out.println(new String(result));
//		System.out.println(new String(Base64.decode(new String(result))));
		System.out.println(new String(decode(data)));

	}

	/**
	 * �Զ��� [�����㷨]
	 * 
	 * @@param s
	 * @@return mStr
	 */
	public static String defineEncode(String s) {
		if (null == s || "".equals(s))
			return "";
		StringBuffer mStr = new StringBuffer("");
		for (int i = 0; i < s.length(); i++) {
			int c = s.substring(i, i + 1).charAt(0);
			// if((c>=65+2 && c<=122-2) || (c>=48+2 && c<=57-2)){
			c += 3;
			// }
			char cc = (char) c;
			mStr.append(cc);
		}
		String m = mStr.toString();
		byte[] result = Base64.encode(m.getBytes());
		m = new String(result);
		return m;
	}

	/**
	 * �Զ��� [�����㷨]
	 * 
	 * @@param s
	 * @@return mStr
	 */
	public static String defineDecode(String s) {
		if (null == s || "".equals(s))
			return "";
		s = new String(Base64.decode(s.getBytes()));
		StringBuffer mStr = new StringBuffer("");
		for (int i = 0; i < s.length(); i++) {
			int c = s.substring(i, i + 1).charAt(0);
			// if((c>=65+2 && c<=122-2) || (c>=48+2 && c<=57-2)){
			c -= 3;
			// }
			char cc = (char) c;
			mStr.append(cc);
		}
		return mStr.toString();
	}
}
